import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
from scipy.stats import chi2

# imposta lo stile whitegrid
sns.set_theme(style='whitegrid')

# ————————————————————————————————
# 1) I tuoi dati
# ————————————————————————————————
x1       = np.array([21.00,20.91,20.81,20.69,20.60,20.53,20.46,20.36,20.55,20.93,21.40,21.66,21.69,21.18,21.04,21.54,21.89,21.86,21.84,21.78,21.60,21.31,21.10,20.96,20.88,20.81,20.69,20.64,20.55,20.49,20.21,19.59,19.91,20.68,21.25,21.43,21.58,21.68,21.84,21.88,21.51,21.29,21.08,20.88,20.85,20.79,20.73,20.66,20.63,20.55,20.48,20.41,20.34,20.28,20.16,20.06,20.18,20.71,21.14,21.31,21.45,21.52,21.41,21.49,21.74,21.90,21.47,21.17,21.17,20.91,20.64,20.42,20.30,20.21,20.10,20.01,19.95,19.89,19.84,19.84,20.17,21.34,22.22,22.34,22.30,22.29,22.46,22.58,22.39,22.25,21.92,21.94,21.97,21.48,21.17,20.96,20.77,20.66,20.57,20.48,20.39,20.31,19.96,19.29,19.61,20.76,21.89,22.83,23.52,23.36,22.78,22.79,22.61,22.50,22.40,22.50,22.70,22.02,21.53,21.27,21.06,20.91,20.76,20.64,20.51,20.43,20.18,19.65,20.18,21.73,22.88,23.26,23.64,23.49,23.18,23.22,23.15,23.17,22.94,22.89,23.04,22.31,21.80,21.53,21.29,21.06,20.91,20.78,20.69,20.53,20.41,20.22,20.39,21.07,21.52,21.54,22.00,22.25,22.24,22.31,22.25,21.92,21.83,21.73,21.72,21.28,21.02,20.80,20.65,20.49,20.38,20.27,20.21,20.13,20.06,20.02,20.16,20.16,20.56,20.64,20.71,20.73,20.72,20.74,20.81,20.75,20.76,20.78,20.78])
x1_error = np.array([0.10,0.10,0.09,0.09,0.08,0.08,0.08,0.09,0.12,0.20,0.26,0.30,0.33,0.19,0.12,0.24,0.33,0.34,0.31,0.31,0.29,0.23,0.20,0.18,0.17,0.16,0.15,0.15,0.14,0.14,0.18,0.30,0.25,0.15,0.19,0.23,0.25,0.21,0.17,0.20,0.12,0.07,0.10,0.11,0.11,0.10,0.10,0.10,0.09,0.09,0.09,0.08,0.07,0.07,0.08,0.11,0.09,0.11,0.19,0.22,0.25,0.26,0.25,0.26,0.32,0.37,0.26,0.21,0.21,0.17,0.12,0.09,0.07,0.06,0.05,0.05,0.04,0.04,0.04,0.05,0.10,0.22,0.32,0.33,0.34,0.33,0.35,0.36,0.34,0.32,0.29,0.29,0.28,0.23,0.19,0.16,0.15,0.14,0.13,0.12,0.11,0.10,0.10,0.15,0.11,0.26,0.35,0.24,0.16,0.12,0.09,0.10,0.11,0.12,0.14,0.11,0.04,0.06,0.06,0.05,0.05,0.04,0.03,0.03,0.03,0.02,0.06,0.14,0.12,0.09,0.11,0.07,0.09,0.11,0.03,0.20,0.18,0.16,0.16,0.18,0.22,0.20,0.18,0.17,0.19,0.14,0.10,0.08,0.07,0.06,0.06,0.07,0.06,0.06,0.06,0.05,0.09,0.09,0.17,0.19,0.21,0.22,0.23,0.22,0.23,0.22,0.20,0.19,0.18,0.19,0.14,0.10,0.08,0.07,0.06,0.06,0.07,0.06,0.06,0.06,0.05,0.09,0.09,0.17,0.19,0.21,0.22,0.23,0.22])
y1       = np.array([461.51,455.31,456.11,451.69,444.64,443.75,444.19,459.44,496.28,648.08,901.53,1018.14,1095.19,724.86,691.47,968.61,1149.33,1046.68,774.92,634.97,564.75,524.81,499.00,484.33,473.86,469.00,463.83,457.61,447.68,444.39,449.92,460.58,518.53,880.22,1096.00,1158.89,1112.44,1208.42,1281.14,1087.17,871.28,791.17,646.19,535.72,504.14,483.11,467.86,457.58,449.89,442.58,436.47,431.35,428.03,429.92,430.56,436.31,486.92,776.89,860.67,824.70,823.44,907.30,829.50,808.39,977.33,870.63,618.25,495.49,471.67,456.97,445.22,442.36,439.69,438.03,436.89,433.14,428.84,432.89,447.05,454.00,510.44,1130.08,1493.31,1398.11,1217.95,1201.14,1284.14,1214.89,1061.28,877.57,652.68,537.33,491.08,469.97,456.69,446.38,438.67,433.03,429.03,424.25,419.50,418.89,434.89,445.94,517.33,1078.14,1548.00,1830.28,2117.31,1759.89,1089.78,983.22,889.53,822.06,770.19,665.89,591.83,545.14,515.35,491.11,475.61,463.75,455.50,450.58,449.17,448.97,457.41,473.39,544.30,1216.22,1707.14,1829.14,1998.19,1704.25,1224.28,1057.22,978.19,929.97,755.47,577.56,535.89,515.11,498.08,485.70,474.78,464.42,458.42,453.69,451.56,448.83,456.61,478.51,523.33,767.86,919.17,935.97,1193.67,1188.17,1037.03,946.31,806.57,695.59,648.83,587.69,549.67,519.67,501.67,489.86,479.35,473.69,469.11,462.75,458.72,456.31,452.50,451.56,452.81,452.95,453.11,451.81,447.25,440.89,434.94,431.22,429.70,427.97,428.92,431.89,433.50])
y1_error = np.array([1.13,0.94,1.98,2.19,1.73,1.55,1.30,2.30,6.91,33.63,63.38,80.47,108.21,41.88,50.93,76.14,123.22,106.75,39.68,22.78,12.71,7.85,4.92,3.60,3.13,2.70,2.20,2.42,3.15,2.87,2.22,1.50,18.42,93.11,132.51,149.50,143.30,133.48,128.73,98.59,56.69,45.15,31.48,13.56,8.61,5.84,4.57,4.23,4.34,3.87,3.61,2.78,2.55,2.92,3.10,3.42,17.34,85.28,102.22,95.95,97.68,111.57,98.74,94.48,138.44,117.16,50.13,17.36,9.86,6.26,5.25,5.11,4.77,3.95,3.66,3.74,3.27,4.06,6.24,6.90,23.07,104.06,133.83,130.19,117.73,101.03,104.51,94.99,78.97,56.71,32.54,14.74,8.05,5.77,3.86,2.77,2.42,2.44,2.17,2.18,1.79,1.64,2.90,2.87,21.95,96.46,118.73,73.09,25.32,53.22,23.32,11.58,14.46,16.68,22.98,20.47,16.49,12.49,9.67,7.59,5.70,4.12,3.34,3.03,3.25,3.36,2.87,3.58,19.30,72.44,84.64,58.39,49.25,60.74,26.64,23.76,25.10,30.89,20.55,8.22,6.13,5.59,4.85,4.33,3.52,3.02,2.10,1.43,1.66,1.70,3.46,5.08,12.82,42.46,64.75,75.63,137.53,125.10,85.36,64.71,46.91,40.08,30.16,19.96,15.15,11.96,10.31,9.68,9.34,9.22,8.58,8.33,7.02,6.41,5.43,4.61,3.96,3.79,3.30,3.14,3.40,3.13,3.12,3.09,2.93,2.61,2.31,2.02,1.97])

# ————————————————————————————————
# 2) Fit lineare via polyfit
# ————————————————————————————————
coeffs = np.polyfit(x1, y1, 1)        # [slope, intercept]
slope, intercept = coeffs

# calcolo della retta di fit sugli stessi x
y1_fit = slope * x1 + intercept

# ————————————————————————————————
# 3) Calcolo del χ² e χ² ridotto
# ————————————————————————————————
residuals = y1 - y1_fit
chi2_val  = np.sum((residuals / y1_error)**2)
dof       = len(x1) - 2             # n punti – n parametri (a e b)
chi2_red  = chi2_val / dof
p_value   = 1 - chi2.cdf(chi2_val, dof)

# Stampa risultati di bontà del fit
print(f"Chi²     = {chi2_val:.2f}")
print(f"χ² ridotto = {chi2_red:.2f}  (ν={dof})")
print(f"p-value  = {p_value:.3f}")

# ————————————————————————————————
# 4) Plot con errorbar e retta di fit
# ————————————————————————————————
plt.figure(figsize=(8, 5))

# Serie con barre d'errore (solo marker, nessuna linea)
plt.errorbar(
    x1, y1,
    label='Aule Vuote',
    color='tab:blue', marker='o',
    capsize=4, alpha=0.5,
    linestyle='none'
)

# Traccia la retta di fit
x_fit = np.linspace(x1.min()-0.1, x1.max()+0.1, 200)
y_fit = slope * x_fit + intercept
plt.plot(x_fit, y_fit,
         label=f'Fit lineare\ny = {slope:.1f}x + {intercept:.1f}',
         linewidth=2)

# Etichette e legenda
plt.xlabel('Temperatura (°C)')
plt.ylabel('Concentrazione CO₂ (ppm)')
plt.title('CO₂ vs Temperatura (aule vuote) con Fit e χ²')
plt.legend()
plt.grid(True)
plt.tight_layout()

# Salva e mostra
plt.savefig("Grafici/Temp-CO₂_chi2.png", dpi=300)
plt.show()